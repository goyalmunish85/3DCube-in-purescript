// Generated by purs bundle 0.12.0
var PS = {};
(function(exports) {exports.getCtx = function(){
    var canvas = document.getElementById("myC");
    return canvas.getContext("2d");
  }

  function project3D(x,y,z) {
    var Qx=Math.PI/4;
    var Qy=Math.PI/3;
    var Qz=Math.PI/4;
    var xRotQz=x*Math.cos(Qz)+y*Math.sin(Qz);
    var yRotQz=y*Math.cos(Qz)-x*Math.sin(Qz);
    var zRotQz=z;
    var xRotQzQx=xRotQz;
    var yRotQzQx=yRotQz*Math.cos(Qx)+zRotQz*Math.sin(Qx);
    var zRotQzQx=zRotQz*Math.cos(Qx)-yRotQz*Math.sin(Qx);
    var xRotQzQxQy=xRotQzQx*Math.cos(Qy)+zRotQzQx*Math.sin(Qy);
    var yRotQzQxQy=yRotQzQx;
    return [xRotQzQxQy,yRotQzQxQy]
  }

  exports.drawCanvas = function(ctx){
    return function(vertices){
        return function(){
          var verticesPixLoc = [];
       
          for(var i=0;i<vertices.length;i++)
          {
              var xyLoc = project3D(vertices[i][0],vertices[i][1],vertices[i][2]);
              var pixLoc = [xyLoc[0]+650/2,-xyLoc[1]+400/2];
              verticesPixLoc.push(pixLoc);
          }
          for(var i=0;i<vertices.length-1;i++){
              ctx.beginPath();
              ctx.moveTo(verticesPixLoc[i][0],verticesPixLoc[i][1]);
              ctx.lineTo(verticesPixLoc[i+1][0],verticesPixLoc[i+1][1]);
              ctx.stroke();
          }
        }
      }
  }
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Main"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Class_Console = PS["Effect.Class.Console"];
  var Effect_Console = PS["Effect.Console"];
  var Prelude = PS["Prelude"];                 
  var main = function __do() {
      var v = $foreign.getCtx();
      var vertices = [ [ 75, 75, 75 ], [ -75 | 0, 75, 75 ], [ -75 | 0, -75 | 0, 75 ], [ 75, -75 | 0, 75 ], [ 75, 75, 75 ], [ 75, 75, -75 | 0 ], [ -75 | 0, 75, -75 | 0 ], [ -75 | 0, -75 | 0, -75 | 0 ], [ 75, -75 | 0, -75 | 0 ], [ 75, 75, -75 | 0 ], [ 75, -75 | 0, -75 | 0 ], [ 75, -75 | 0, 75 ], [ -75 | 0, -75 | 0, 75 ], [ -75 | 0, -75 | 0, -75 | 0 ], [ -75 | 0, 75, -75 | 0 ], [ -75 | 0, 75, 75 ] ];
      return $foreign.drawCanvas(v)(vertices)();
  };
  var add2AndMultiplyBy3 = function (x) {
      var x1 = x + 2 | 0;
      return x1 * 3 | 0;
  };
  exports["add2AndMultiplyBy3"] = add2AndMultiplyBy3;
  exports["main"] = main;
  exports["getCtx"] = $foreign.getCtx;
  exports["drawCanvas"] = $foreign.drawCanvas;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();