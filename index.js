// Generated by purs bundle 0.12.0
var PS = {};
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                 
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS["Data.Symbol"] = PS["Data.Symbol"] || {});
(function(exports) {
    "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS["Type.Data.RowList"] = PS["Type.Data.RowList"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Show = function (show) {
      this.show = show;
  };
  var ShowRecordFields = function (showRecordFields) {
      this.showRecordFields = showRecordFields;
  };                                                 
  var showRecordFieldsNil = new ShowRecordFields(function (v) {
      return function (v1) {
          return [  ];
      };
  });
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return new Show(function (record) {
              var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
              if (v.length === 0) {
                  return "{}";
              };
              return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
          });
      };
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return new ShowRecordFields(function (v) {
                  return function (record) {
                      var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var focus = Record_Unsafe.unsafeGet(key)(record);
                      return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                  };
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["ShowRecordFields"] = ShowRecordFields;
  exports["showRecordFields"] = showRecordFields;
  exports["showNumber"] = showNumber;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];                 
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Effect = PS["Effect"];                 
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };
  var monadEffectEffect = new MonadEffect(function () {
      return Effect.monadEffect;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS["Effect.Class"] = PS["Effect.Class"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Console"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var logShow = function (dictShow) {
      return function (a) {
          return $foreign.log(Data_Show.show(dictShow)(a));
      };
  };
  exports["logShow"] = logShow;
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var logShow = function (dictMonadEffect) {
      return function (dictShow) {
          return function ($18) {
              return Effect_Class.liftEffect(dictMonadEffect)(Effect_Console.logShow(dictShow)($18));
          };
      };
  };
  exports["logShow"] = logShow;
})(PS["Effect.Class.Console"] = PS["Effect.Class.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
      };
  };

  exports.stroke = function(ctx) {
      return function() {
          ctx.stroke();
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
              };
          };
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Effect_Exception_Unsafe = PS["Effect.Exception.Unsafe"];
  var Prelude = PS["Prelude"];
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["getContext2D"] = $foreign.getContext2D;
  exports["beginPath"] = $foreign.beginPath;
  exports["stroke"] = $foreign.stroke;
  exports["lineTo"] = $foreign.lineTo;
  exports["moveTo"] = $foreign.moveTo;
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {exports.getCtx = function(){
    var canvas = document.getElementById("myC");
    return canvas.getContext("2d");
  }

  function project3D(x,y,z) {
    var Qx=Math.PI/4;
    var Qy=Math.PI/3;
    var Qz=Math.PI/4;
    var xRotQz=x*Math.cos(Qz)+y*Math.sin(Qz);
    var yRotQz=y*Math.cos(Qz)-x*Math.sin(Qz);
    var zRotQz=z;
    var xRotQzQx=xRotQz;
    var yRotQzQx=yRotQz*Math.cos(Qx)+zRotQz*Math.sin(Qx);
    var zRotQzQx=zRotQz*Math.cos(Qx)-yRotQz*Math.sin(Qx);
    var xRotQzQxQy=xRotQzQx*Math.cos(Qy)+zRotQzQx*Math.sin(Qy);
    var yRotQzQxQy=yRotQzQx;
    return [xRotQzQxQy,yRotQzQxQy]
  }
  exports.drawCanvas = function(ctx){
    return function(vertices){
        return function(){
          var verticesPixLoc = [];
          ctx.clearRect(0,0,650,400);
          for(var i=0;i<vertices.length;i++)
          {
              var xyLoc = project3D(vertices[i][0],vertices[i][1],vertices[i][2]);
              console.log(xyLoc)
              var pixLoc = [xyLoc[0]+650/2,-xyLoc[1]+400/2];
              verticesPixLoc.push(pixLoc);
          }
          console.log(verticesPixLoc)
          for(var i=0;i<vertices.length-1;i++){
              ctx.beginPath();
              ctx.moveTo(verticesPixLoc[i][0],verticesPixLoc[i][1]);
              ctx.lineTo(verticesPixLoc[i+1][0],verticesPixLoc[i+1][1]);
              ctx.stroke();
          }
        }
      }
  }
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
    "use strict";          

  exports.cos = Math.cos;    

  exports.sin = Math.sin;      

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Math"];
  exports["cos"] = $foreign.cos;
  exports["sin"] = $foreign.sin;
  exports["pi"] = $foreign.pi;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Main"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Class_Console = PS["Effect.Class.Console"];
  var Effect_Console = PS["Effect.Console"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var transf = function (v) {
      return {
          x: v.x + 300.0,
          y: -v.y + 200.0
      };
  };
  var rotate = function (c) {
      var max = $$Math.pi / 4.0;
      var may = $$Math.pi / 3.0;
      var maz = $$Math.pi / 4.0;
      var xRotQz = c.x * $$Math.cos(maz) + c.y * $$Math.sin(maz);
      var yRotQz = c.y * $$Math.cos(maz) - c.x * $$Math.sin(maz);
      var yRotQzQx = yRotQz * $$Math.cos(max) + c.z * $$Math.sin(max);
      var zRotQzQx = c.z * $$Math.cos(max) - yRotQz * $$Math.sin(max);
      var xRotQzQxQy = xRotQz * $$Math.cos(may) + zRotQzQx * $$Math.sin(may);
      return {
          x: xRotQzQxQy,
          y: yRotQzQx
      };
  };
  var drawLine = function (ctx) {
      return function (v1) {
          return function (v2) {
              return function __do() {
                  Graphics_Canvas.beginPath(ctx)();
                  Graphics_Canvas.moveTo(ctx)(v1.x)(v1.y)();
                  Graphics_Canvas.lineTo(ctx)(v2.x)(v2.y)();
                  return Graphics_Canvas.stroke(ctx)();
              };
          };
      };
  };
  var drawcube = function (ctx) {
      var v1 = transf(rotate({
          x: 100.0,
          y: 100.0,
          z: 100.0
      }));
      var v2 = transf(rotate({
          x: -100.0,
          y: 100.0,
          z: 100.0
      }));
      var v3 = transf(rotate({
          x: -100.0,
          y: -100.0,
          z: 100.0
      }));
      var v4 = transf(rotate({
          x: 100.0,
          y: -100.0,
          z: 100.0
      }));
      var v5 = transf(rotate({
          x: 100.0,
          y: 100.0,
          z: 100.0
      }));
      var v6 = transf(rotate({
          x: 100.0,
          y: 100.0,
          z: -100.0
      }));
      var v7 = transf(rotate({
          x: -100.0,
          y: 100.0,
          z: -100.0
      }));
      var v8 = transf(rotate({
          x: -100.0,
          y: -100.0,
          z: -100.0
      }));
      var v9 = transf(rotate({
          x: 100.0,
          y: -100.0,
          z: -100.0
      }));
      var v10 = transf(rotate({
          x: 100.0,
          y: 100.0,
          z: -100.0
      }));
      var v11 = transf(rotate({
          x: 100.0,
          y: -100.0,
          z: -100.0
      }));
      var v12 = transf(rotate({
          x: 100.0,
          y: -100.0,
          z: 100.0
      }));
      var v13 = transf(rotate({
          x: -100.0,
          y: -100.0,
          z: 100.0
      }));
      var v14 = transf(rotate({
          x: -100.0,
          y: -100.0,
          z: -100.0
      }));
      var v15 = transf(rotate({
          x: -100.0,
          y: 100.0,
          z: -100.0
      }));
      var v16 = transf(rotate({
          x: -100.0,
          y: 100.0,
          z: 100.0
      }));
      return function __do() {
          Graphics_Canvas.beginPath(ctx)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v1)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v2)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v3)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v4)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v5)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v6)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v7)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v8)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v9)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v10)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v11)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v12)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v13)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v14)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v15)();
          Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "x";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "y";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showNumber)))(v16)();
          drawLine(ctx)(v1)(v2)();
          drawLine(ctx)(v2)(v3)();
          drawLine(ctx)(v3)(v4)();
          drawLine(ctx)(v4)(v5)();
          drawLine(ctx)(v5)(v6)();
          drawLine(ctx)(v6)(v7)();
          drawLine(ctx)(v7)(v8)();
          drawLine(ctx)(v8)(v9)();
          drawLine(ctx)(v9)(v10)();
          drawLine(ctx)(v10)(v11)();
          drawLine(ctx)(v11)(v12)();
          drawLine(ctx)(v12)(v13)();
          drawLine(ctx)(v13)(v14)();
          drawLine(ctx)(v14)(v15)();
          return drawLine(ctx)(v15)(v16)();
      };
  };
  var main = Data_Functor["void"](Effect.functorEffect)(function __do() {
      var v = Graphics_Canvas.getCanvasElementById("myC")();
      var $__unused = function (dictPartial1) {
          return function ($dollar3) {
              return $dollar3;
          };
      };
      return $__unused()((function () {
          if (v instanceof Data_Maybe.Just) {
              return function __do() {
                  var v1 = Graphics_Canvas.getContext2D(v.value0)();
                  return drawcube(v1)();
              };
          };
          throw new Error("Failed pattern match at Main line 128, column 3 - line 129, column 3: " + [ v.constructor.name ]);
      })())();
  });
  exports["transf"] = transf;
  exports["rotate"] = rotate;
  exports["drawLine"] = drawLine;
  exports["drawcube"] = drawcube;
  exports["main"] = main;
  exports["getCtx"] = $foreign.getCtx;
  exports["drawCanvas"] = $foreign.drawCanvas;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();